name: Deploy to GitHub Pages

on:
  push:
    branches: [main]   # runs after a PR merge to main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Find the Angular app folder automatically (the folder that has angular.json)
      - name: Locate Angular app directory
        id: loc
        shell: bash
        run: |
          set -e
          APP_DIR=$(git ls-files | grep -E '(^|.*/)(angular\.json)$' | head -n1 | xargs dirname)
          if [ -z "$APP_DIR" ]; then
            echo "::error ::No angular.json found in the repository."
            exit 1
          fi
          echo "appdir=$APP_DIR" >> "$GITHUB_OUTPUT"
          echo "Angular app directory: $APP_DIR"
          ls -la "$APP_DIR"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ steps.loc.outputs.appdir }}/package-lock.json

      - name: Install deps
        working-directory: ${{ steps.loc.outputs.appdir }}
        run: npm ci

      # 2) Build with correct base-href for a project page
      - name: Build Angular
        working-directory: ${{ steps.loc.outputs.appdir }}
        run: |
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          npm run build -- --configuration=production --base-href "/$REPO_NAME/"

      # 3) Find the built index.html (works for Angular 16/17/18 output layouts)
      - name: Determine dist path
        id: dist
        working-directory: ${{ steps.loc.outputs.appdir }}
        shell: bash
        run: |
          set -e
          CANDIDATE=$(find dist -maxdepth 4 -type f -name index.html -print -quit)
          if [ -z "$CANDIDATE" ]; then
            echo "::error ::No index.html found under dist/ after build."
            exit 1
          fi
          DIST_DIR=$(dirname "$CANDIDATE")
          echo "path=$DIST_DIR" >> "$GITHUB_OUTPUT"
          echo "Resolved dist path: $DIST_DIR"
          ls -la "$DIST_DIR"

      # 4) SPA fallback so deep links donâ€™t 404 on Pages
      - name: Create SPA 404 fallback
        working-directory: ${{ steps.loc.outputs.appdir }}
        run: cp "${{ steps.dist.outputs.path }}/index.html" "${{ steps.dist.outputs.path }}/404.html" || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.loc.outputs.appdir }}/${{ steps.dist.outputs.path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
